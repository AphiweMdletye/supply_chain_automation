buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.5"
    }
    project.ext {
        serenityVersion = '1.1+'
    }

    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:' + serenityVersion)
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.qameta.allure'
apply plugin: 'net.serenity-bdd.aggregator'


sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

sourceSets {
    test {
        java {
            srcDir 'src/Tests'
        }
//        resources {
//            srcDir 'src/Resources'
//        }
    }

}

configurations {
    agent
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.testng:testng:6.11'
    compile 'org.assertj:assertj-core:3.8.0'
    compile 'io.rest-assured:rest-assured:3.0.3'
    compile group: 'org.json', name: 'json', version: '20170516'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'org.apache.httpcomponents:httpclient:4.3.1'
    compile 'org.apache.commons:commons-exec:1.0.1+'
    compile 'org.apache.directory.studio:org.apache.commons.lang:2.6+'
    compile 'org.apache.directory.studio:org.apache.commons.codec:1.8+'
    compile 'org.json:json:20140107'
    compile 'ru.yandex.qatools.allure:allure-java-annotations:1.3.9'
    testCompile "com.google.code.gson:gson:2.2.4"
    testCompile group: 'com.jayway.restassured', name: 'rest-assured', version: '1.6'
    testCompile "ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4+"

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.4.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.0'

    compile group: 'net.serenity-bdd', name: 'serenity-junit', version: '2.0.40'
    compile group: 'net.serenity-bdd', name: 'serenity-core', version: '2.0.40'
    compile group: 'net.serenity-bdd', name: 'serenity-model', version: '2.0.40'
    compile group: 'net.serenity-bdd', name: 'serenity-screenplay', version: '2.0.40'
    compile group: 'net.serenity-bdd', name: 'serenity-jbehave', version: '1.44.0'
    compile group: 'net.serenity-bdd', name: 'serenity-reports', version: '2.0.40'
    compile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '2.0.40'
    compile group: 'net.serenity-bdd', name: 'serenity-report-resources', version: '2.0.40'

    testCompile 'org.assertj:assertj-core:3.4+'
    testCompile 'org.slf4j:slf4j-simple:1.7+'
}



tasks.withType(Test) {
    gradle.startParameter.continueOnFailure = true
    systemProperties = System.getProperties()
    testLogging.events "started", "passed", "skipped", "failed", "standardOut", "standardError"
    System.setProperty("org.apache.commons.logging.Log", "org.apache.commons.logging.impl.Jdk14Logger");
    testLogging.exceptionFormat "full"
    testLogging.showStandardStreams = true
}


task run_logistics(type: Test) {
    useTestNG() {
//    useJUnit() {
        useDefaultListeners = true
        suiteName 'Logistics'
        filter {

            includeTestsMatching "Logistics.SenerityDemo"

        }
    }
}

